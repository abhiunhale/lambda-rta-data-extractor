#jinja2:lstrip_blocks:False,trim_blocks:False
---
AWSTemplateFormatVersion: "2010-09-09"

Description: WFM Snowflake Data Export Lambda, revision={{revision}}

Conditions:
  LowEnvConcurrency: !Or
    - !Equals
      - !Ref 'EnvironmentType'
      - dev
    - !Equals
      - !Ref 'EnvironmentType'
      - test
    - !Equals
      - !Ref 'EnvironmentType'
      - perf

Parameters:
  EnvironmentType:
      Description: The environment type. All resources will be created with environment type prefix
      Type: String
      Default: {{stack_prefix}}

  SourceCodeBucket:
      Description: S3 bucket with lambda source code
      Type: String
      Default: {{cf_bucket}}

  WFMExportSFDataGatewayName:
        Description: 'WFM Snowflake data export gateway'
        Type: String
        Default: {{stack_prefix}}-WFM-SFDataExport

  WFMExportSFDataGatewayStageName:
        Description: 'WFM Snowflake data export gateway stage'
        Type: String
        Default: 'wfm-reports'

  WFMExportSFDataGatewayHTTPMethod:
    Type: String
    Default: POST

  WFMExportSFDataGatewayPathPart:
    Type: String
    Default: export

  BmcInfoAlarmTopic:
        Type: 'AWS::SSM::Parameter::Value<String>'
        Default: /{{profile}}/aws/sns/topic/bmc-info-alarm-topic
        Description: The arn of Bmc info alarm sns topic.

  BmcCriticalAlarmTopic:
        Type: 'AWS::SSM::Parameter::Value<String>'
        Default: /{{profile}}/aws/sns/topic/bmc-critical-alarm-topic
        Description: The arn of Bmc critical alarm sns topic

  LowConcurrency:
      Type: String
      Default: 80

  ProductionConcurrency:
      Type: String
      Default: 150

  DevopsContactInformationSSM:
      Description: 'Devops team contact information'
      Type: 'AWS::SSM::Parameter::Value<String>'
      Default: '/{{profile}}/aws/contactinformation/devops'

  WfmContactInformationSSM:
      Description: 'WFM Team contact information'
      Type: 'AWS::SSM::Parameter::Value<String>'
      Default: '/{{profile}}/aws/contactinformation/wfm'


Resources:
  apiExportGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: WFM SF data export gateway
      EndpointConfiguration:
        Types:
          - REGIONAL
      Name: !Ref WFMExportSFDataGatewayName

  apiGatewayResourceWFM:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref apiExportGateway
      ParentId: !GetAtt apiExportGateway.RootResourceId
      PathPart: wfm-reports

  apiGatewayResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref apiExportGateway
      ParentId: !Ref apiGatewayResourceWFM
      PathPart: export

  apiGatewayRootMethod:
      Type: AWS::ApiGateway::Method
      Properties:
        AuthorizationType: NONE
        HttpMethod: !Ref WFMExportSFDataGatewayHTTPMethod
        Integration:
          IntegrationHttpMethod: POST
          Type: AWS
          Uri: !Sub
            - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
            - lambdaArn: !GetAtt WFMSnowflakeExportDataFunction.Arn
          RequestTemplates:
                "application/json" : "{
                    \"body\" : $input.json('$'),
                    \"headers\": {
                    #foreach($header in $input.params().header.keySet())
                    \"$header\": \"$util.escapeJavaScript($input.params().header.get($header))\" #if($foreach.hasNext),#end
                    #end }
                    }"
          IntegrationResponses:
            - StatusCode: 200
            -
                SelectionPattern : "Bad Request was provided"
                StatusCode: 400
            -
                SelectionPattern : "Internal Server Error"
                StatusCode: 500
        MethodResponses:
          - StatusCode: 200
          - StatusCode: 400
          - StatusCode: 500
        ResourceId: !Ref apiGatewayResource
        RestApiId: !Ref apiExportGateway

  apiGatewayDeployment14NOV22:
      Type: AWS::ApiGateway::Deployment
      DependsOn:
        - apiGatewayRootMethod
      Properties:
        RestApiId: !Ref apiExportGateway
        StageName: !Ref WFMExportSFDataGatewayStageName

  lambdaApiGatewayInvoke:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt WFMSnowflakeExportDataFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${apiExportGateway}/*/${WFMExportSFDataGatewayHTTPMethod}/wfm-reports/export

  WFMSnowflakeDataExportLambdaRole:
     Type: AWS::IAM::Role
     Properties:
         RoleName: {{lambda_name}}-role
         AssumeRolePolicyDocument:
             Version: "2012-10-17"
             Statement:
                 -
                     Effect: Allow
                     Principal:
                         Service:
                             - lambda.amazonaws.com
                             - events.amazonaws.com
                             - s3.amazonaws.com
                     Action:
                         - sts:AssumeRole
         ManagedPolicyArns:
             - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
             - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
         Policies:
             -
                 PolicyName: WFMSnowflakeDataExportPolicyLambdaGatewayS3Access
                 PolicyDocument:
                     Version: "2012-10-17"
                     Statement:
                         -
                             Effect: Allow
                             Action:
                                 - s3:*
                                 - cloudwatch:*
                                 - apigateway:*
                             Resource:
                                 - "*"
                         -
                            Effect: Allow
                            Action:
                                - secretsmanager:GetSecretValue
                            Resource:
                                - "*"

  WFMSnowflakeExportDataFunction:
     Type: AWS::Lambda::Function
     DependsOn:
         - WFMSnowflakeDataExportLambdaRole
     Properties:
         FunctionName:   {{lambda_name}}
         Description:    "export wfm data from snowflake and upload to S3"
         Handler:        src/index.handler
         Runtime:        nodejs16.x
         Timeout:        900
         MemorySize:     1024
         Role:           !GetAtt WFMSnowflakeDataExportLambdaRole.Arn
         ReservedConcurrentExecutions:
             Fn::If:
               - LowEnvConcurrency
               - !Ref LowConcurrency
               - !Ref ProductionConcurrency
         VpcConfig:
             SecurityGroupIds:
               {% for sg in sec_groups -%}
                 - {{sg}}
               {% endfor %}
             SubnetIds:
               {% for sb in subnets -%}
                 - {{sb}}
               {% endfor %}
         Environment:
             Variables:
                 AWS_PROFILE:     "{{stack_prefix}}"
                 DEBUG:        "true"
                 SERVICE_URL:  "{{service_url}}"
                 DATALAKE_BUCKET : "{{datalake_bucket}}"
                 WFM_SNOWFLAKE_USER_SECRET: "{{stack_prefix}}-wfm-snowflake-user-secret"
         Code:
             S3Bucket: !Ref SourceCodeBucket
             S3Key:    "{{s3_directory}}/{{lambda_archive}}"
         Tags:
             -
                 Key: nice:owner
                 Value: wfm
             -
                 Key: Name
                 Value: {{lambda_name}}
             -
                 Key: Product
                 Value: WFM
             -
                 Key: Service
                 Value: wfm-snowflake-data-export
             -
                 Key: Environment
                 Value: !Ref EnvironmentType
             -
                 Key: ApplicationOwner
                 Value: !Ref WfmContactInformationSSM
             -
                 Key: InfrastructureOwner
                 Value: !Ref DevopsContactInformationSSM

  WFMExportParameterStore:
      Type: 'AWS::SSM::Parameter'
      Properties:
        Name: !Sub '/{{stack_prefix}}/aws/api-gateway/wfm-reports'
        Type: 'String'
        Value: !Sub https://${apiExportGateway}.execute-api.${AWS::Region}.amazonaws.com/wfm-reports/export
        Description: !Sub 'WFM Data export - API domain (without hostname)'

Outputs:
  apiGatewayInvokeURL:
    Value: !Sub https://${apiExportGateway}.execute-api.${AWS::Region}.amazonaws.com/wfm-reports/export
  lambdaArn:
    Value: !GetAtt WFMSnowflakeExportDataFunction.Arn
